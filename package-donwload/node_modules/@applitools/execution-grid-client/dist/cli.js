#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.builder = void 0;
const yargs_1 = __importDefault(require("yargs"));
const proxy_server_1 = require("./proxy-server");
const builder = yargs => yargs
    .example([
    ['eg-client', 'Run EG client server on random port'],
    ['eg-client --port 8080', 'Run EG client server on port 8080'],
])
    .options({
    port: {
        description: 'run server on a specific port.',
        alias: 'p',
        type: 'number',
    },
    egTunnelUrl: {
        description: 'run server with specific eg tunnel url.',
        type: 'string',
    },
    egTimeout: {
        description: 'run server with specific default eg timeout.',
        alias: 'timeout',
        type: 'number',
    },
    egInactivityTimeout: {
        description: 'run server with specific default eg inactivity timeout.',
        alias: 'inactivityTimeout',
        type: 'number',
    },
    proxyUrl: {
        description: 'run server with specific default proxy url.',
        alias: 'proxy',
        type: 'string',
    },
    eyesServerUrl: {
        description: 'run server with specific default eyes server url.',
        alias: 'serverUrl',
        type: 'string',
    },
    apiKey: {
        description: 'run server with specific default api key.',
        type: 'string',
    },
});
exports.builder = builder;
const handler = async (args) => {
    const proxy = await (0, proxy_server_1.makeServer)(args);
    console.log(proxy.url);
};
exports.handler = handler;
if (require.main === module) {
    yargs_1.default.command({ command: '*', builder: exports.builder, handler: exports.handler }).argv;
}
