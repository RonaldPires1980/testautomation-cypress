"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestResultContainerData = void 0;
const utils = __importStar(require("@applitools/utils"));
const TestResults_1 = require("./TestResults");
class TestResultContainerData {
    /** @internal */
    constructor(container, deleteTest) {
        this._container = {};
        this._container = container instanceof TestResultContainerData ? container.toJSON() : container;
        this._deleteTest = deleteTest;
    }
    get testResults() {
        return this._container.testResults;
    }
    getTestResults() {
        return new TestResults_1.TestResultsData(this.testResults, this._deleteTest);
    }
    get exception() {
        return this._container.exception;
    }
    getException() {
        return this.exception;
    }
    get browserInfo() {
        return this._container.browserInfo;
    }
    getBrowserInfo() {
        return this.browserInfo;
    }
    /** @internal */
    toObject() {
        return this._container;
    }
    /** @internal */
    toJSON() {
        return utils.general.toJSON(this._container);
    }
    /** @internal */
    toString() {
        return `${this.testResults ? this.testResults : ''} - ${this.exception ? this.exception : ''}`;
    }
}
exports.TestResultContainerData = TestResultContainerData;
