"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeServerProcess = void 0;
const child_process_1 = require("child_process");
const path_1 = __importDefault(require("path"));
function makeServerProcess(options) {
    return new Promise((resolve, reject) => {
        var _a;
        const server = (0, child_process_1.fork)(path_1.default.resolve(__dirname, '../dist/cli.js'), [`--config=${JSON.stringify(options)}`], {
            detached: (_a = options.detached) !== null && _a !== void 0 ? _a : true,
            stdio: ['ignore', 'ignore', 'ignore', 'ipc'],
        });
        const timeout = setTimeout(() => {
            reject(new Error(`Server didn't respond for 10s after being started`));
            server.kill();
        }, 10000);
        server.on('error', reject);
        server.once('message', ({ name, payload }) => {
            if (name === 'port') {
                resolve({ port: payload.port, close: () => server.kill() });
                clearTimeout(timeout);
                server.channel.unref();
            }
        });
        server.unref();
    });
}
exports.makeServerProcess = makeServerProcess;
